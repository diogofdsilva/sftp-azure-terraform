# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    - master
    
pool:
    vmImage: 'ubuntu-latest'

variables:
    - name: AZURE_LOCATION
      value: eastus 
    - group: ARM_AZURE_PRINCIPAL
    - group: TF_AZURE_REMOTE_BACKEND

steps:
- script: sudo apt-get update -y $$ sudo apt-get install -y sshpass
  workingDirectory: ./2-sftpstart
  displayName: 'INSTALL SSH PASS'

- script: |
    az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
    az account set --subscription $(ARM_SUBSCRIPTION_ID)
  displayName: 'Login on Azure CLI'

- script: terraform init  -backend-config="storage_account_name=$(AZURE_STATE_STORAGE_NAME)" -backend-config="resource_group_name=$(AZURE_STATE_RESOURCE_GROUP_NAME)"
  workingDirectory: ./1-terraform
  displayName: 'INFRA SETUP: Run Terraform Init'

- script: echo $(terraform output virtual_machine_admin_user)
  workingDirectory: ./1-terraform
  displayName: 'ECHO: USER'

- script: terraform plan && terraform apply -auto-approve 
  workingDirectory: ./1-terraform
  env:
    TF_VAR_AZURE_LOCATION: $(AZURE_LOCATION)
  displayName: 'INFRA SETUP: Run Terraform PLAN and APPLY'

- script: echo $(terraform output virtual_machine_admin_user)
  workingDirectory: ./1-terraform
  displayName: 'ECHO: USER'

- script: export VMAU=$(terraform output virtual_machine_admin_user)
  workingDirectory: ./1-terraform
  displayName: 'ENV: USER'

- script: echo $VMAU
  workingDirectory: ./1-terraform
  displayName: 'ECHO: USER'

- script: export VMAP=$(terraform output virtual_machine_admin_pwd)
  workingDirectory: ./1-terraform
  displayName: 'ENV: PWD'

- script: export FQDN=$(terraform output domain_name_label)
  workingDirectory: ./1-terraform
  displayName: 'ENV: FQDN'

- script: sshpass -p $(echo $VMAP) scp usercreate.sh $(echo $VMAU)@$(echo $FQDN):/home/$(echo $VMAU)
  workingDirectory: ./2-sftpstart
  displayName: 'SETUP: Copy bash to remote server via SSH'
 