# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    - master
    
pool:
    vmImage: 'ubuntu-latest'

variables:
    - name: VM_ADMIN_USER
      value: azureuser
    - name: VM_ADMIN_PWD
      value:  
    - name: AZURE_LOCATION
      value: eastus 
    - group: ARM_AZURE_PRINCIPAL

steps:
- script: |
    az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
    az account set --subscription $(ARM_SUBSCRIPTION_ID)
  displayName: 'Login on Azure CLI'

- script: terraform init
  workingDirectory: ./1-terraform
  displayName: 'INFRA SETUP: Run Terraform Init'

- script: terraform apply -auto-approve
  workingDirectory: ./1-terraform
  env:
    TF_VAR_AZURE_LOCATION: $(AZURE_LOCATION)
  displayName: 'INFRA SETUP: Run Terraform Apply (target=file share)'

- script: sshpass -p $(PASSWORD) scp usercreate.sh $(USER)@$(terraform output domain_name_label):/home/$(USER)
  workingDirectory: ./2-sftpstart
  env: 
    USER: $(terraform output virtual_machine_admin_user)
    PASSWORD: $(terraform output virtual_machine_admin_pwd)
  displayName: 'SETUP: Copy bash to remote server via SSH'

 